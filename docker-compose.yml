services:
  db-migration:
    container_name: db-migration
    build:
      context: .
      dockerfile: ./packages/database/dockerfile
    restart: on-failure:3
    volumes:
      - "./db.sqlite:/app/db.sqlite"
    environment:
      - NODE_ENV=production
      - DB_LOCATION=file:/app/db.sqlite # Example environment variable
  api:
    container_name: api
    build:
      context: .
      dockerfile: ./apps/api/dockerfile
    restart: unless-stopped
    volumes:
      - "./db.sqlite:/app/db.sqlite"
    env_file: .env
    expose:
      - 3000
    environment:
      - NODE_ENV=production
      - API_PORT=3000
      - DB_LOCATION=file:/app/db.sqlite # Example environment variable
  website:
    depends_on:
      - api
    build:
      context: .
      dockerfile: ./apps/website/dockerfile
    expose:
      - 80
    environment:
      - NODE_ENV=production
    volumes:
      - ./apps/website/nginx/:/etc/nginx/conf.d/
    restart: unless-stopped
  nginx:
    image: nginx:stable
    volumes:
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    ports:
      - "3333:80" # Map port 80 in the container to port 3333 on the host
    restart: unless-stopped
